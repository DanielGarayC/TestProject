<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <title>Medici칩n de Aceleraci칩n</title>
    <link rel="stylesheet" href="/assets/vendors/mdi/css/materialdesignicons.min.css" />
    <link rel="stylesheet" href="/assets/vendors/flag-icon-css/css/flag-icon.min.css" />
    <link rel="stylesheet" href="/assets/vendors/css/vendor.bundle.base.css" />
    <link rel="stylesheet" href="/assets/vendors/font-awesome/css/font-awesome.min.css" />
    <link rel="stylesheet" href="/assets/vendors/bootstrap-datepicker/bootstrap-datepicker.min.css" />
    <link rel="stylesheet" href="/assets/css/style.css" />
    <link rel="shortcut icon" href="/assets/images/favicon.png" />

    <!-- Highcharts Scripts with Boost -->
    <script src="https://code.highcharts.com/highcharts.js" defer></script>
    <script src="https://code.highcharts.com/modules/boost.js" defer></script>

    <style>
        .content-wrapper {
            overflow-y: scroll !important; /* Asegura que haya scroll si es necesario */
        }
    </style>
  </head>
  <body>
    <div class="container-scroller">
      <nav class="sidebar sidebar-offcanvas" id="sidebar">
        <div class="text-center sidebar-brand-wrapper d-flex align-items-center">
        </div>
        <ul class="nav">
          <li class="nav-item">
            <a class="nav-link" href="/pagPrincipal">
              <i class="mdi mdi-home menu-icon"></i>
              <span class="menu-title">Inicio</span>
            </a>
          </li>
        </ul>
      </nav>
      <div class="container-fluid page-body-wrapper">
        <div id="theme-settings" class="settings-panel">
          <i class="settings-close mdi mdi-close"></i>
          <p class="settings-heading">SIDEBAR SKINS</p>
          <div class="sidebar-bg-options selected" id="sidebar-default-theme">
            <div class="img-ss rounded-circle bg-light border mr-3"></div> Default
          </div>
          <div class="sidebar-bg-options" id="sidebar-dark-theme">
            <div class="img-ss rounded-circle bg-dark border mr-3"></div> Dark
          </div>
          <p class="settings-heading mt-2">HEADER SKINS</p>
          <div class="color-tiles mx-0 px-4">
            <div class="tiles light"></div>
            <div class="tiles dark"></div>
          </div>
        </div>
        <nav class="navbar col-lg-12 col-12 p-lg-0 fixed-top d-flex flex-row">
          <div class="navbar-menu-wrapper d-flex align-items-stretch justify-content-between">
            <a class="navbar-brand brand-logo-mini align-self-center d-lg-none" href="index.html"><img src="/assets/images/logo-mini.svg" alt="logo" /></a>
            <button class="navbar-toggler navbar-toggler align-self-center mr-2" type="button" data-toggle="minimize">
              <i class="mdi mdi-menu"></i>
            </button>
            <button class="navbar-toggler navbar-toggler-right d-lg-none align-self-center" type="button" data-toggle="offcanvas">
              <span class="mdi mdi-menu"></span>
            </button>
          </div>
        </nav>
        <div class="main-panel">
            <div class="content-wrapper pb-0">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h1 class="mb-0">Mediciones Detalladas</h1>
                    <a href="/graficas/<%= medicionTipo1.idMedicion%>" class="btn btn-primary">
                      Ver Gr치ficas PSD, FDD y Espectrograma
                    </a>
                    <a href="/tipoMedicion/1" class="btn btn-info">Regresar</a>
                </div>
                <p>
                    Medici칩n de:
                    <%= new Date(medicionTipo1.fecha_hora).toLocaleDateString('es-PE', { 
                      weekday: 'long', 
                      year: 'numeric', 
                      month: 'long', 
                      day: 'numeric' 
                    }).replace(',', '').replace(/^\w/, c => c.toUpperCase()) %> a las 
                    <%= new Date(medicionTipo1.fecha_hora).toLocaleTimeString('es-PE', { 
                      hour: '2-digit', 
                      minute: '2-digit', 
                      second: '2-digit' 
                    }) %>
                </p>
                <div id="data-container"></div>
                <div id="graficos"></div>
                <div class="sensor-values">
                  <h3>Valores Registrados</h3>
                  <p><strong><%= valorTemperatura.nombre %>: </strong><%= valorTemperatura.valor %></p>
                  <p><strong><%= valorHumedad.nombre %>: </strong><%= valorHumedad.valor %></p>
              </div>
            </div>
        </div>
        <!-- main-panel ends -->
      </div>
      <!-- page-body-wrapper ends -->
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        // Parsear datos del backend
        const dataTipo1 = JSON.parse('<%- JSON.stringify(medicionTipo1.data_sensors || []) %>');

        function procesarDatos(datos) {
          return datos.reduce((acc, medicion) => {
            const sensorId = medicion.sensor.idSensor;
            if (!acc[sensorId]) {
              acc[sensorId] = [];
            }
            acc[sensorId].push(medicion.valor);
            return acc;
          }, {});
        }

        function crearGraficosSensores(datosPorSensor) {
          const graficosDiv = document.getElementById('graficos');
          graficosDiv.innerHTML = ''; // Limpiar contenedor

          Object.keys(datosPorSensor).forEach(sensorId => {
            const sensorData = datosPorSensor[sensorId];

            const graficoDiv = document.createElement('div');
            graficoDiv.style.width = '100%';
            graficoDiv.style.height = '400px';
            graficosDiv.appendChild(graficoDiv);

            Highcharts.chart(graficoDiv, {
              chart: {
                type: 'line',
                zoomType: 'x',
                height: 400
              },
              title: {
                text: `Mediciones - Sensor ${sensorId}`
              },
              boost: {
                useGPUTranslations: true,
                usePreAllocated: true
              },
              xAxis: {
                categories: sensorData.map((_, i) => i + 1),
                title: {
                  text: 'Index'
                }
              },
              yAxis: {
                title: {
                  text: 'Valor'
                }
              },
              series: [{
                name: `Sensor ${sensorId}`,
                data: sensorData,
                lineWidth: 1
              }]
            });
          });
        }

        const datosPorSensor = procesarDatos(dataTipo1);
        crearGraficosSensores(datosPorSensor);
      });
    </script>

    <script src="/assets/vendors/js/vendor.bundle.base.js" defer></script>
    <script src="/assets/js/off-canvas.js" async></script>
    <script src="/assets/js/hoverable-collapse.js" defer></script>
    <script src="/assets/js/misc.js" defer></script>
  </body>
</html>
